from vkbottle.bot import BotLabeler, Message, rules
from vkbottle import Keyboard, Text

import asyncio

from models.db_api import methods as db
from config import api

activate_labeler = BotLabeler()
activate_labeler.vbml_ignore_case = True
activate_labeler.auto_rules = [rules.PeerRule(from_chat=False)]



@activate_labeler.message(text=['–ü—Ä–∏–Ω–∏–º–∞—é'])
@activate_labeler.message(payload={'cmd': 'agree'})
async def agree(message: Message):
    await api.messages.set_activity(type='typing', peer_id=message.peer_id)
    await asyncio.sleep(2)
    await message.answer('‚úÖ–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã')

    user = db.get_user_by_id(user_id=message.peer_id)
    posts = db.get_post_by_id(user_id=message.peer_id)

    keyboard = Keyboard(one_time=True)
    keyboard.add(Text('–ß–∏—Ç–∞—Ç—å –ø–æ—Å—Ç—ã'))
    keyboard.add(Text('–î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç'))

    text = str(user)+f'\nüíº–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}'+f'\nüëÄ–û—Ü–µ–Ω–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {user.tasks}'
    if len(posts) != 0:
        text += '\n\n–ü–æ—Å—Ç—ã –≤ —Ä–∞–±–æ—Ç–µ:'
        for i in posts:
            b = i.link
            try:
                b = await api.utils.get_short_link(i.link)
                b = b.short_url
            except:
                b = i.link
            text += "\n"+b + f' ‚Äì {i.all-i.count} üí¨ –∏–∑ ' + f'{i.all} üí¨'
    await message.answer(text, keyboard=keyboard)