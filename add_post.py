from vkbottle.bot import BotLabeler, Message, rules
from vkbottle import Keyboard, Text

from models.db_api import methods as db
from config import api, state_dispenser
from states import PostData, ctx
from comments import get_post

add_post_labeler = BotLabeler()
add_post_labeler.vbml_ignore_case = True
add_post_labeler.auto_rules = [rules.PeerRule(from_chat=False)]

@add_post_labeler.message(text=['–î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç'])
async def add_post(message: Message):
    user = db.get_user_by_id(user_id=message.peer_id)
    if user.balance > 10:
        keyboard = Keyboard(inline=True)
        keyboard.add(Text('5'))
        keyboard.add(Text('10'))
        keyboard.add(Text('20'))

        ctx.set(message.peer_id, {})
        await state_dispenser.set(message.peer_id, PostData.COUNT)

        await message.answer(
            '‚ùì–ö–∞–∫–æ–µ —á–∏—Å–ª–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å? –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤\n\nüí°–û–¥–∏–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç–æ–∏—Ç 10 –±–∞–ª–ª–æ–≤',
            keyboard=keyboard
        )
    else:
        await message.answer('‚òπÔ∏è–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–∞–ª–ª—ã\n\nüí°–°–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ –≤ "–ß–∏—Ç–∞—Ç—å –ø–æ—Å—Ç—ã"!')

        user = db.get_user_by_id(user_id=message.peer_id)
        posts = db.get_post_by_id(user_id=message.peer_id)

        keyboard = Keyboard(one_time=True)
        keyboard.add(Text('–ß–∏—Ç–∞—Ç—å –ø–æ—Å—Ç—ã'))
        keyboard.add(Text('–î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç'))

        text = str(user)+f'\nüíº–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}'+f'\nüëÄ–û—Ü–µ–Ω–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {user.tasks}'
        if len(posts) != 0:
            text += '\n\nüåê–ü–æ—Å—Ç—ã –≤ —Ä–∞–±–æ—Ç–µ:'
            for i in posts:
                b = i.link
                try:
                    b = await api.utils.get_short_link(i.link)
                    b = b.short_url
                except:
                    b = i.link
                text += "\n"+b + f' ‚Äì {i.all-i.count} üí¨ –∏–∑ ' + f'{i.all} üí¨'
        await message.answer(text, keyboard=keyboard)


@add_post_labeler.message(state=PostData.COUNT)
async def post_count(message: Message):
    if message.text.isdigit() and int(message.text) > 0:
        user = db.get_user_by_id(user_id=message.peer_id)
        if user.balance >= int(message.text)*10:
            data = ctx.get(message.peer_id)
            data['count'] = int(message.text)
            ctx.set(message.peer_id, data)
            await state_dispenser.set(message.peer_id, PostData.LINK, count=message.text)
            await message.answer('üìù–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç\n\nüí°–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ—Å—Ç–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω–∏—Ü—É. –ò–ª–∏ –∂–µ, –Ω–∞ –ø–æ—Å—Ç –ª—é–±–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞')
        else:
            await message.answer(f'‚òπÔ∏è–ù–∞ —Ç–∞–∫–æ–µ —á–∏—Å–ª–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–ª–ª–æ–≤\n\nüí°–°–µ–π—á–∞—Å —É –≤–∞—Å: {user.balance} –±–∞–ª–ª–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: {int(message.text)*10-user.balance} –±–∞–ª–ª–æ–≤')
    else:
        await message.answer('‚òπÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')

@add_post_labeler.message(state=PostData.LINK)
async def post_link(message: Message):
    data = ctx.get(message.peer_id)
    count = data['count']
    link = message.text

    ok, msg = get_post(link)
    if not ok:
        if msg == 'Old post':
            await message.answer('‚òπÔ∏è–≠—Ç–æ—Ç –ø–æ—Å—Ç –Ω–µ –ø–æ–¥–æ–π–¥–µ—Ç\nüïõ–Ø –ø—Ä–∏–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–∏, —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–µ–Ω–µ–µ –¥–≤—É—Ö —Å—É—Ç–æ–∫')
        else:
            await message.answer('‚òπÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∏–ª–∏ –ø–æ—Å—Ç —Å –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞')
    else:
        if msg == 'user' and message.peer_id != int(link.split('wall')[1].split('_')[0]):
            await message.answer('‚òπÔ∏è–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∏–ª–∏ –∂–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ')
        else:
            bal = -10*count
            db.insert_post(message.peer_id, link, count)
            db.change_balance(message.peer_id, bal)
            posts = db.get_post_by_id(user_id=message.peer_id)
            db.insert_view(message.peer_id, posts[-1].id)
            await message.answer('‚úÖ–û—Ç–ª–∏—á–Ω–æ, –ø–æ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!\n\nüí°–Ø —Å–æ–æ–±—â—É, –∫–æ–≥–¥–∞ –Ω–∞–±–µ—Ä–µ—Ç—Å—è –Ω—É–∂–Ω–æ–µ —á–∏—Å–ª–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤')

            await state_dispenser.delete(message.peer_id)
            ctx.set(message.peer_id, {})

            user = db.get_user_by_id(user_id=message.peer_id)

            keyboard = Keyboard(one_time=True)
            keyboard.add(Text('–ß–∏—Ç–∞—Ç—å –ø–æ—Å—Ç—ã'))
            keyboard.add(Text('–î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç'))

            text = str(user)+f'\nüíº–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}'+f'\nüëÄ–û—Ü–µ–Ω–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {user.tasks}'
            if len(posts) != 0:
                text += '\n\nüåê–ü–æ—Å—Ç—ã –≤ —Ä–∞–±–æ—Ç–µ:'
                for i in posts:
                    b = i.link
                    try:
                        b = await api.utils.get_short_link(i.link)
                        b = b.short_url
                    except:
                        b = i.link
                    text += "\n"+b + f' ‚Äì {i.all-i.count} üí¨ –∏–∑ ' + f'{i.all} üí¨'
            await message.answer(text, keyboard=keyboard)

